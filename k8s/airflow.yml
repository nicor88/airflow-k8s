apiVersion: v1
kind: Namespace
metadata:
  name: airflow
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-postgres
  namespace: airflow
  labels:
    app: airflow
    tier: db
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "gp2"
  resources:
    requests:
      storage: 20Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: airflow
  name: airflow-role-admin
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods", "pods/log"]
    verbs: ["get", "watch", "list", "create", "delete"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: airflow-role-binding
  namespace: airflow
subjects:
  - kind: ServiceAccount
    name: default
    namespace: airflow
roleRef:
  kind: Role
  name: airflow-role-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-postgres
  namespace: airflow
spec:
  type: LoadBalancer
  selector:
    app: airflow
    tier: db
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airflow-postgres
  namespace: airflow
spec:
  serviceName: airflow-postgres
  replicas: 1
  selector:
    matchLabels:
      app: airflow
      tier: db
  template:
    metadata:
      labels:
        app: airflow
        tier: db
    spec:
      hostname: airflow-postgres
      volumes:
        - name: airflow-postgres-storage
          persistentVolumeClaim:
            claimName: airflow-postgres
      containers:
        - name: postgres
          image: postgres:10.4
          ports:
            - name: postgres
              containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "airflow"
            - name: POSTGRES_PASSWORD
              value: "airflow"
            - name: POSTGRES_DB
              value: "airflow"
          volumeMounts:
            - name: airflow-postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-redis
  namespace: airflow
spec:
  type: ClusterIP
  selector:
    app: airflow
    tier: redis
  ports:
    - name: redis
      protocol: TCP
      port: 6379
      targetPort: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: airflow-redis
  namespace: airflow
spec:
  serviceName: airflow-redis
  replicas: 1
  selector:
    matchLabels:
      app: airflow
      tier: redis
  template:
    metadata:
      labels:
        app: airflow
        tier: redis
    spec:
      hostname: airflow-redis
      containers:
        - name: redis
          image: redis:5.0.3
          ports:
            - name: redis
              containerPort: 6379
          args: ["redis-server"]
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-web
  namespace: airflow
spec:
  type: LoadBalancer
  selector:
    app: airflow
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: web
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: airflow-web
  namespace: airflow
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
        - name: web
          image: 191605532619.dkr.ecr.us-east-1.amazonaws.com/airflow:latest
          env:
            - name: POSTGRES_HOST
              value: "airflow-postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "airflow"
            - name: POSTGRES_PASSWORD
              value: "airflow"
            - name: POSTGRES_DB
              value: "airflow"
            - name: REDIS_HOST
              value: "airflow-redis"
            - name: REDIS_PORT
              value: "6379"
            - name: STAGE
              value: "production"
            - name: EXECUTOR
              value: "CeleryExecutor"
            - name: AIRFLOW_HOME
              value: "/usr/local/airflow"
            - name: AIRFLOW_BASE_URL
              value: "http://airflow.nicor88.com"
            - name: FERNET_KEY
              value: "Z-HUb2E3ljqDIvdVwXgK9OIQ0gZb5AKCAkFkmjzmbQU="
            - name: ENABLE_REMOTE_LOGGING
              value: "True"
            - name: LOGS_S3_BUCKET
              value: "s3://nicor88-airflow-logs/production"
#          resources:
#            requests:
#              memory: "3Gi"
          ports:
            - name: web
              containerPort: 8080
          args: ["webserver"]
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 30
            periodSeconds: 60
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 60
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: scheduler
    spec:
      restartPolicy: Always
      containers:
        - name: scheduler
          image: 191605532619.dkr.ecr.us-east-1.amazonaws.com/airflow:latest
          env:
            - name: POSTGRES_HOST
              value: "airflow-postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "airflow"
            - name: POSTGRES_PASSWORD
              value: "airflow"
            - name: POSTGRES_DB
              value: "airflow"
            - name: REDIS_HOST
              value: "airflow-redis"
            - name: REDIS_PORT
              value: "6379"
            - name: STAGE
              value: "production"
            - name: EXECUTOR
              value: "CeleryExecutor"
            - name: AIRFLOW_HOME
              value: "/usr/local/airflow"
            - name: AIRFLOW_BASE_URL
              value: "http://airflow.nicor88.com"
            - name: FERNET_KEY
              value: "Z-HUb2E3ljqDIvdVwXgK9OIQ0gZb5AKCAkFkmjzmbQU="
            - name: ENABLE_REMOTE_LOGGING
              value: "True"
            - name: LOGS_S3_BUCKET
              value: "s3://nicor88-airflow-logs/production"
          args: ["scheduler"]
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: airflow-worker
  namespace: airflow
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: airflow
        tier: worker
    spec:
      restartPolicy: Always
      containers:
        - name: worker
          image: 191605532619.dkr.ecr.us-east-1.amazonaws.com/airflow:latest
          env:
            - name: POSTGRES_HOST
              value: "airflow-postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "airflow"
            - name: POSTGRES_PASSWORD
              value: "airflow"
            - name: POSTGRES_DB
              value: "airflow"
            - name: REDIS_HOST
              value: "airflow-redis"
            - name: REDIS_PORT
              value: "6379"
            - name: STAGE
              value: "production"
            - name: EXECUTOR
              value: "CeleryExecutor"
            - name: AIRFLOW_HOME
              value: "/usr/local/airflow"
            - name: AIRFLOW_BASE_URL
              value: "http://airflow.nicor88.com"
            - name: FERNET_KEY
              value: "Z-HUb2E3ljqDIvdVwXgK9OIQ0gZb5AKCAkFkmjzmbQU="
            - name: ENABLE_REMOTE_LOGGING
              value: "True"
            - name: LOGS_S3_BUCKET
              value: "s3://nicor88-airflow-logs/production"
          args: ["worker"]
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-flower
  namespace: airflow
spec:
  type: LoadBalancer
  selector:
    app: airflow
    tier: flower
  ports:
    - name: flower
      protocol: TCP
      port: 80
      targetPort: flower
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: airflow-flower
  namespace: airflow
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: flower
    spec:
      restartPolicy: Always
      containers:
        - name: flower
          image: 191605532619.dkr.ecr.us-east-1.amazonaws.com/airflow:latest
          env:
            - name: POSTGRES_HOST
              value: "airflow-postgres"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "airflow"
            - name: POSTGRES_PASSWORD
              value: "airflow"
            - name: POSTGRES_DB
              value: "airflow"
            - name: REDIS_HOST
              value: "airflow-redis"
            - name: REDIS_PORT
              value: "6379"
            - name: STAGE
              value: "production"
            - name: EXECUTOR
              value: "CeleryExecutor"
            - name: AIRFLOW_HOME
              value: "/usr/local/airflow"
          ports:
          - name: flower
            containerPort: 5555
          args: ["flower"]
